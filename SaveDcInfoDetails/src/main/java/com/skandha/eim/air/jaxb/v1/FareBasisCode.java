//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.11.30 at 10:02:03 PM IST 
//


package com.skandha.eim.air.jaxb.v1;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for FareBasisCode complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="FareBasisCode">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="privateFareType" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="bookingCode" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="departureAirportCode" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="arrivalAirportCode" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="fareComponentBeginAirport" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="availabilityBreak" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="fareComponentEndAirport" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="fareComponentDirectionality" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="fareBasisCode" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "FareBasisCode", propOrder = {
    "privateFareType",
    "bookingCode",
    "departureAirportCode",
    "arrivalAirportCode",
    "fareComponentBeginAirport",
    "availabilityBreak",
    "fareComponentEndAirport",
    "fareComponentDirectionality",
    "fareBasisCode"
})
public class FareBasisCode
    implements Equals, ToString
{

    protected String privateFareType;
    protected String bookingCode;
    protected String departureAirportCode;
    protected String arrivalAirportCode;
    protected String fareComponentBeginAirport;
    protected String availabilityBreak;
    protected String fareComponentEndAirport;
    protected String fareComponentDirectionality;
    protected String fareBasisCode;

    /**
     * Gets the value of the privateFareType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPrivateFareType() {
        return privateFareType;
    }

    /**
     * Sets the value of the privateFareType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPrivateFareType(String value) {
        this.privateFareType = value;
    }

    /**
     * Gets the value of the bookingCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getBookingCode() {
        return bookingCode;
    }

    /**
     * Sets the value of the bookingCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setBookingCode(String value) {
        this.bookingCode = value;
    }

    /**
     * Gets the value of the departureAirportCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDepartureAirportCode() {
        return departureAirportCode;
    }

    /**
     * Sets the value of the departureAirportCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDepartureAirportCode(String value) {
        this.departureAirportCode = value;
    }

    /**
     * Gets the value of the arrivalAirportCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getArrivalAirportCode() {
        return arrivalAirportCode;
    }

    /**
     * Sets the value of the arrivalAirportCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setArrivalAirportCode(String value) {
        this.arrivalAirportCode = value;
    }

    /**
     * Gets the value of the fareComponentBeginAirport property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getFareComponentBeginAirport() {
        return fareComponentBeginAirport;
    }

    /**
     * Sets the value of the fareComponentBeginAirport property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFareComponentBeginAirport(String value) {
        this.fareComponentBeginAirport = value;
    }

    /**
     * Gets the value of the availabilityBreak property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getAvailabilityBreak() {
        return availabilityBreak;
    }

    /**
     * Sets the value of the availabilityBreak property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAvailabilityBreak(String value) {
        this.availabilityBreak = value;
    }

    /**
     * Gets the value of the fareComponentEndAirport property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getFareComponentEndAirport() {
        return fareComponentEndAirport;
    }

    /**
     * Sets the value of the fareComponentEndAirport property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFareComponentEndAirport(String value) {
        this.fareComponentEndAirport = value;
    }

    /**
     * Gets the value of the fareComponentDirectionality property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getFareComponentDirectionality() {
        return fareComponentDirectionality;
    }

    /**
     * Sets the value of the fareComponentDirectionality property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFareComponentDirectionality(String value) {
        this.fareComponentDirectionality = value;
    }

    /**
     * Gets the value of the fareBasisCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getFareBasisCode() {
        return fareBasisCode;
    }

    /**
     * Sets the value of the fareBasisCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFareBasisCode(String value) {
        this.fareBasisCode = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            String thePrivateFareType;
            thePrivateFareType = this.getPrivateFareType();
            strategy.appendField(locator, this, "privateFareType", buffer, thePrivateFareType);
        }
        {
            String theBookingCode;
            theBookingCode = this.getBookingCode();
            strategy.appendField(locator, this, "bookingCode", buffer, theBookingCode);
        }
        {
            String theDepartureAirportCode;
            theDepartureAirportCode = this.getDepartureAirportCode();
            strategy.appendField(locator, this, "departureAirportCode", buffer, theDepartureAirportCode);
        }
        {
            String theArrivalAirportCode;
            theArrivalAirportCode = this.getArrivalAirportCode();
            strategy.appendField(locator, this, "arrivalAirportCode", buffer, theArrivalAirportCode);
        }
        {
            String theFareComponentBeginAirport;
            theFareComponentBeginAirport = this.getFareComponentBeginAirport();
            strategy.appendField(locator, this, "fareComponentBeginAirport", buffer, theFareComponentBeginAirport);
        }
        {
            String theAvailabilityBreak;
            theAvailabilityBreak = this.getAvailabilityBreak();
            strategy.appendField(locator, this, "availabilityBreak", buffer, theAvailabilityBreak);
        }
        {
            String theFareComponentEndAirport;
            theFareComponentEndAirport = this.getFareComponentEndAirport();
            strategy.appendField(locator, this, "fareComponentEndAirport", buffer, theFareComponentEndAirport);
        }
        {
            String theFareComponentDirectionality;
            theFareComponentDirectionality = this.getFareComponentDirectionality();
            strategy.appendField(locator, this, "fareComponentDirectionality", buffer, theFareComponentDirectionality);
        }
        {
            String theFareBasisCode;
            theFareBasisCode = this.getFareBasisCode();
            strategy.appendField(locator, this, "fareBasisCode", buffer, theFareBasisCode);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof FareBasisCode)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final FareBasisCode that = ((FareBasisCode) object);
        {
            String lhsPrivateFareType;
            lhsPrivateFareType = this.getPrivateFareType();
            String rhsPrivateFareType;
            rhsPrivateFareType = that.getPrivateFareType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "privateFareType", lhsPrivateFareType), LocatorUtils.property(thatLocator, "privateFareType", rhsPrivateFareType), lhsPrivateFareType, rhsPrivateFareType)) {
                return false;
            }
        }
        {
            String lhsBookingCode;
            lhsBookingCode = this.getBookingCode();
            String rhsBookingCode;
            rhsBookingCode = that.getBookingCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "bookingCode", lhsBookingCode), LocatorUtils.property(thatLocator, "bookingCode", rhsBookingCode), lhsBookingCode, rhsBookingCode)) {
                return false;
            }
        }
        {
            String lhsDepartureAirportCode;
            lhsDepartureAirportCode = this.getDepartureAirportCode();
            String rhsDepartureAirportCode;
            rhsDepartureAirportCode = that.getDepartureAirportCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "departureAirportCode", lhsDepartureAirportCode), LocatorUtils.property(thatLocator, "departureAirportCode", rhsDepartureAirportCode), lhsDepartureAirportCode, rhsDepartureAirportCode)) {
                return false;
            }
        }
        {
            String lhsArrivalAirportCode;
            lhsArrivalAirportCode = this.getArrivalAirportCode();
            String rhsArrivalAirportCode;
            rhsArrivalAirportCode = that.getArrivalAirportCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "arrivalAirportCode", lhsArrivalAirportCode), LocatorUtils.property(thatLocator, "arrivalAirportCode", rhsArrivalAirportCode), lhsArrivalAirportCode, rhsArrivalAirportCode)) {
                return false;
            }
        }
        {
            String lhsFareComponentBeginAirport;
            lhsFareComponentBeginAirport = this.getFareComponentBeginAirport();
            String rhsFareComponentBeginAirport;
            rhsFareComponentBeginAirport = that.getFareComponentBeginAirport();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "fareComponentBeginAirport", lhsFareComponentBeginAirport), LocatorUtils.property(thatLocator, "fareComponentBeginAirport", rhsFareComponentBeginAirport), lhsFareComponentBeginAirport, rhsFareComponentBeginAirport)) {
                return false;
            }
        }
        {
            String lhsAvailabilityBreak;
            lhsAvailabilityBreak = this.getAvailabilityBreak();
            String rhsAvailabilityBreak;
            rhsAvailabilityBreak = that.getAvailabilityBreak();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "availabilityBreak", lhsAvailabilityBreak), LocatorUtils.property(thatLocator, "availabilityBreak", rhsAvailabilityBreak), lhsAvailabilityBreak, rhsAvailabilityBreak)) {
                return false;
            }
        }
        {
            String lhsFareComponentEndAirport;
            lhsFareComponentEndAirport = this.getFareComponentEndAirport();
            String rhsFareComponentEndAirport;
            rhsFareComponentEndAirport = that.getFareComponentEndAirport();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "fareComponentEndAirport", lhsFareComponentEndAirport), LocatorUtils.property(thatLocator, "fareComponentEndAirport", rhsFareComponentEndAirport), lhsFareComponentEndAirport, rhsFareComponentEndAirport)) {
                return false;
            }
        }
        {
            String lhsFareComponentDirectionality;
            lhsFareComponentDirectionality = this.getFareComponentDirectionality();
            String rhsFareComponentDirectionality;
            rhsFareComponentDirectionality = that.getFareComponentDirectionality();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "fareComponentDirectionality", lhsFareComponentDirectionality), LocatorUtils.property(thatLocator, "fareComponentDirectionality", rhsFareComponentDirectionality), lhsFareComponentDirectionality, rhsFareComponentDirectionality)) {
                return false;
            }
        }
        {
            String lhsFareBasisCode;
            lhsFareBasisCode = this.getFareBasisCode();
            String rhsFareBasisCode;
            rhsFareBasisCode = that.getFareBasisCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "fareBasisCode", lhsFareBasisCode), LocatorUtils.property(thatLocator, "fareBasisCode", rhsFareBasisCode), lhsFareBasisCode, rhsFareBasisCode)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

}
