//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.11.30 at 10:02:03 PM IST 
//


package com.skandha.eim.air.jaxb.v1;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for PassengerFare complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="PassengerFare">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="baseFareAmount" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="baseFareCurrencyCode" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="fareConstructionAmount" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="fareConstructionCurrencyCode" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="currencyCodeDecimalPlaces" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="equivFareAmount" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="equivFareCurrencyCode" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="equivFareDecimalPlaces" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="taxes" type="{http://www.xmlns.skandha.com/datatypes/Air/Service/1.0/}Taxes" minOccurs="0"/>
 *         &lt;element name="TotalFareAmount" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="TotalFareCurrencyAmount" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="surcharges" type="{http://www.xmlns.skandha.com/datatypes/Air/Service/1.0/}Surcharges" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="messages" type="{http://www.xmlns.skandha.com/datatypes/Air/Service/1.0/}Messages" minOccurs="0"/>
 *         &lt;element name="baggageInformationList" type="{http://www.xmlns.skandha.com/datatypes/Air/Service/1.0/}BaggageInformationList" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "PassengerFare", propOrder = {
    "baseFareAmount",
    "baseFareCurrencyCode",
    "fareConstructionAmount",
    "fareConstructionCurrencyCode",
    "currencyCodeDecimalPlaces",
    "equivFareAmount",
    "equivFareCurrencyCode",
    "equivFareDecimalPlaces",
    "taxes",
    "totalFareAmount",
    "totalFareCurrencyAmount",
    "surcharges",
    "messages",
    "baggageInformationList"
})
public class PassengerFare
    implements Equals, ToString
{

    protected String baseFareAmount;
    protected String baseFareCurrencyCode;
    protected String fareConstructionAmount;
    protected String fareConstructionCurrencyCode;
    protected String currencyCodeDecimalPlaces;
    protected String equivFareAmount;
    protected String equivFareCurrencyCode;
    protected String equivFareDecimalPlaces;
    protected Taxes taxes;
    @XmlElement(name = "TotalFareAmount")
    protected String totalFareAmount;
    @XmlElement(name = "TotalFareCurrencyAmount")
    protected String totalFareCurrencyAmount;
    protected List<Surcharges> surcharges;
    protected Messages messages;
    protected BaggageInformationList baggageInformationList;

    /**
     * Gets the value of the baseFareAmount property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getBaseFareAmount() {
        return baseFareAmount;
    }

    /**
     * Sets the value of the baseFareAmount property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setBaseFareAmount(String value) {
        this.baseFareAmount = value;
    }

    /**
     * Gets the value of the baseFareCurrencyCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getBaseFareCurrencyCode() {
        return baseFareCurrencyCode;
    }

    /**
     * Sets the value of the baseFareCurrencyCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setBaseFareCurrencyCode(String value) {
        this.baseFareCurrencyCode = value;
    }

    /**
     * Gets the value of the fareConstructionAmount property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getFareConstructionAmount() {
        return fareConstructionAmount;
    }

    /**
     * Sets the value of the fareConstructionAmount property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFareConstructionAmount(String value) {
        this.fareConstructionAmount = value;
    }

    /**
     * Gets the value of the fareConstructionCurrencyCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getFareConstructionCurrencyCode() {
        return fareConstructionCurrencyCode;
    }

    /**
     * Sets the value of the fareConstructionCurrencyCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFareConstructionCurrencyCode(String value) {
        this.fareConstructionCurrencyCode = value;
    }

    /**
     * Gets the value of the currencyCodeDecimalPlaces property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCurrencyCodeDecimalPlaces() {
        return currencyCodeDecimalPlaces;
    }

    /**
     * Sets the value of the currencyCodeDecimalPlaces property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCurrencyCodeDecimalPlaces(String value) {
        this.currencyCodeDecimalPlaces = value;
    }

    /**
     * Gets the value of the equivFareAmount property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEquivFareAmount() {
        return equivFareAmount;
    }

    /**
     * Sets the value of the equivFareAmount property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEquivFareAmount(String value) {
        this.equivFareAmount = value;
    }

    /**
     * Gets the value of the equivFareCurrencyCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEquivFareCurrencyCode() {
        return equivFareCurrencyCode;
    }

    /**
     * Sets the value of the equivFareCurrencyCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEquivFareCurrencyCode(String value) {
        this.equivFareCurrencyCode = value;
    }

    /**
     * Gets the value of the equivFareDecimalPlaces property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEquivFareDecimalPlaces() {
        return equivFareDecimalPlaces;
    }

    /**
     * Sets the value of the equivFareDecimalPlaces property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEquivFareDecimalPlaces(String value) {
        this.equivFareDecimalPlaces = value;
    }

    /**
     * Gets the value of the taxes property.
     * 
     * @return
     *     possible object is
     *     {@link Taxes }
     *     
     */
    public Taxes getTaxes() {
        return taxes;
    }

    /**
     * Sets the value of the taxes property.
     * 
     * @param value
     *     allowed object is
     *     {@link Taxes }
     *     
     */
    public void setTaxes(Taxes value) {
        this.taxes = value;
    }

    /**
     * Gets the value of the totalFareAmount property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTotalFareAmount() {
        return totalFareAmount;
    }

    /**
     * Sets the value of the totalFareAmount property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTotalFareAmount(String value) {
        this.totalFareAmount = value;
    }

    /**
     * Gets the value of the totalFareCurrencyAmount property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTotalFareCurrencyAmount() {
        return totalFareCurrencyAmount;
    }

    /**
     * Sets the value of the totalFareCurrencyAmount property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTotalFareCurrencyAmount(String value) {
        this.totalFareCurrencyAmount = value;
    }

    /**
     * Gets the value of the surcharges property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the surcharges property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSurcharges().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Surcharges }
     * 
     * 
     */
    public List<Surcharges> getSurcharges() {
        if (surcharges == null) {
            surcharges = new ArrayList<Surcharges>();
        }
        return this.surcharges;
    }

    /**
     * Gets the value of the messages property.
     * 
     * @return
     *     possible object is
     *     {@link Messages }
     *     
     */
    public Messages getMessages() {
        return messages;
    }

    /**
     * Sets the value of the messages property.
     * 
     * @param value
     *     allowed object is
     *     {@link Messages }
     *     
     */
    public void setMessages(Messages value) {
        this.messages = value;
    }

    /**
     * Gets the value of the baggageInformationList property.
     * 
     * @return
     *     possible object is
     *     {@link BaggageInformationList }
     *     
     */
    public BaggageInformationList getBaggageInformationList() {
        return baggageInformationList;
    }

    /**
     * Sets the value of the baggageInformationList property.
     * 
     * @param value
     *     allowed object is
     *     {@link BaggageInformationList }
     *     
     */
    public void setBaggageInformationList(BaggageInformationList value) {
        this.baggageInformationList = value;
    }

    public void setSurcharges(List<Surcharges> value) {
        this.surcharges = null;
        List<Surcharges> draftl = this.getSurcharges();
        draftl.addAll(value);
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            String theBaseFareAmount;
            theBaseFareAmount = this.getBaseFareAmount();
            strategy.appendField(locator, this, "baseFareAmount", buffer, theBaseFareAmount);
        }
        {
            String theBaseFareCurrencyCode;
            theBaseFareCurrencyCode = this.getBaseFareCurrencyCode();
            strategy.appendField(locator, this, "baseFareCurrencyCode", buffer, theBaseFareCurrencyCode);
        }
        {
            String theFareConstructionAmount;
            theFareConstructionAmount = this.getFareConstructionAmount();
            strategy.appendField(locator, this, "fareConstructionAmount", buffer, theFareConstructionAmount);
        }
        {
            String theFareConstructionCurrencyCode;
            theFareConstructionCurrencyCode = this.getFareConstructionCurrencyCode();
            strategy.appendField(locator, this, "fareConstructionCurrencyCode", buffer, theFareConstructionCurrencyCode);
        }
        {
            String theCurrencyCodeDecimalPlaces;
            theCurrencyCodeDecimalPlaces = this.getCurrencyCodeDecimalPlaces();
            strategy.appendField(locator, this, "currencyCodeDecimalPlaces", buffer, theCurrencyCodeDecimalPlaces);
        }
        {
            String theEquivFareAmount;
            theEquivFareAmount = this.getEquivFareAmount();
            strategy.appendField(locator, this, "equivFareAmount", buffer, theEquivFareAmount);
        }
        {
            String theEquivFareCurrencyCode;
            theEquivFareCurrencyCode = this.getEquivFareCurrencyCode();
            strategy.appendField(locator, this, "equivFareCurrencyCode", buffer, theEquivFareCurrencyCode);
        }
        {
            String theEquivFareDecimalPlaces;
            theEquivFareDecimalPlaces = this.getEquivFareDecimalPlaces();
            strategy.appendField(locator, this, "equivFareDecimalPlaces", buffer, theEquivFareDecimalPlaces);
        }
        {
            Taxes theTaxes;
            theTaxes = this.getTaxes();
            strategy.appendField(locator, this, "taxes", buffer, theTaxes);
        }
        {
            String theTotalFareAmount;
            theTotalFareAmount = this.getTotalFareAmount();
            strategy.appendField(locator, this, "totalFareAmount", buffer, theTotalFareAmount);
        }
        {
            String theTotalFareCurrencyAmount;
            theTotalFareCurrencyAmount = this.getTotalFareCurrencyAmount();
            strategy.appendField(locator, this, "totalFareCurrencyAmount", buffer, theTotalFareCurrencyAmount);
        }
        {
            List<Surcharges> theSurcharges;
            theSurcharges = (((this.surcharges!= null)&&(!this.surcharges.isEmpty()))?this.getSurcharges():null);
            strategy.appendField(locator, this, "surcharges", buffer, theSurcharges);
        }
        {
            Messages theMessages;
            theMessages = this.getMessages();
            strategy.appendField(locator, this, "messages", buffer, theMessages);
        }
        {
            BaggageInformationList theBaggageInformationList;
            theBaggageInformationList = this.getBaggageInformationList();
            strategy.appendField(locator, this, "baggageInformationList", buffer, theBaggageInformationList);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof PassengerFare)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final PassengerFare that = ((PassengerFare) object);
        {
            String lhsBaseFareAmount;
            lhsBaseFareAmount = this.getBaseFareAmount();
            String rhsBaseFareAmount;
            rhsBaseFareAmount = that.getBaseFareAmount();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "baseFareAmount", lhsBaseFareAmount), LocatorUtils.property(thatLocator, "baseFareAmount", rhsBaseFareAmount), lhsBaseFareAmount, rhsBaseFareAmount)) {
                return false;
            }
        }
        {
            String lhsBaseFareCurrencyCode;
            lhsBaseFareCurrencyCode = this.getBaseFareCurrencyCode();
            String rhsBaseFareCurrencyCode;
            rhsBaseFareCurrencyCode = that.getBaseFareCurrencyCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "baseFareCurrencyCode", lhsBaseFareCurrencyCode), LocatorUtils.property(thatLocator, "baseFareCurrencyCode", rhsBaseFareCurrencyCode), lhsBaseFareCurrencyCode, rhsBaseFareCurrencyCode)) {
                return false;
            }
        }
        {
            String lhsFareConstructionAmount;
            lhsFareConstructionAmount = this.getFareConstructionAmount();
            String rhsFareConstructionAmount;
            rhsFareConstructionAmount = that.getFareConstructionAmount();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "fareConstructionAmount", lhsFareConstructionAmount), LocatorUtils.property(thatLocator, "fareConstructionAmount", rhsFareConstructionAmount), lhsFareConstructionAmount, rhsFareConstructionAmount)) {
                return false;
            }
        }
        {
            String lhsFareConstructionCurrencyCode;
            lhsFareConstructionCurrencyCode = this.getFareConstructionCurrencyCode();
            String rhsFareConstructionCurrencyCode;
            rhsFareConstructionCurrencyCode = that.getFareConstructionCurrencyCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "fareConstructionCurrencyCode", lhsFareConstructionCurrencyCode), LocatorUtils.property(thatLocator, "fareConstructionCurrencyCode", rhsFareConstructionCurrencyCode), lhsFareConstructionCurrencyCode, rhsFareConstructionCurrencyCode)) {
                return false;
            }
        }
        {
            String lhsCurrencyCodeDecimalPlaces;
            lhsCurrencyCodeDecimalPlaces = this.getCurrencyCodeDecimalPlaces();
            String rhsCurrencyCodeDecimalPlaces;
            rhsCurrencyCodeDecimalPlaces = that.getCurrencyCodeDecimalPlaces();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "currencyCodeDecimalPlaces", lhsCurrencyCodeDecimalPlaces), LocatorUtils.property(thatLocator, "currencyCodeDecimalPlaces", rhsCurrencyCodeDecimalPlaces), lhsCurrencyCodeDecimalPlaces, rhsCurrencyCodeDecimalPlaces)) {
                return false;
            }
        }
        {
            String lhsEquivFareAmount;
            lhsEquivFareAmount = this.getEquivFareAmount();
            String rhsEquivFareAmount;
            rhsEquivFareAmount = that.getEquivFareAmount();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "equivFareAmount", lhsEquivFareAmount), LocatorUtils.property(thatLocator, "equivFareAmount", rhsEquivFareAmount), lhsEquivFareAmount, rhsEquivFareAmount)) {
                return false;
            }
        }
        {
            String lhsEquivFareCurrencyCode;
            lhsEquivFareCurrencyCode = this.getEquivFareCurrencyCode();
            String rhsEquivFareCurrencyCode;
            rhsEquivFareCurrencyCode = that.getEquivFareCurrencyCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "equivFareCurrencyCode", lhsEquivFareCurrencyCode), LocatorUtils.property(thatLocator, "equivFareCurrencyCode", rhsEquivFareCurrencyCode), lhsEquivFareCurrencyCode, rhsEquivFareCurrencyCode)) {
                return false;
            }
        }
        {
            String lhsEquivFareDecimalPlaces;
            lhsEquivFareDecimalPlaces = this.getEquivFareDecimalPlaces();
            String rhsEquivFareDecimalPlaces;
            rhsEquivFareDecimalPlaces = that.getEquivFareDecimalPlaces();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "equivFareDecimalPlaces", lhsEquivFareDecimalPlaces), LocatorUtils.property(thatLocator, "equivFareDecimalPlaces", rhsEquivFareDecimalPlaces), lhsEquivFareDecimalPlaces, rhsEquivFareDecimalPlaces)) {
                return false;
            }
        }
        {
            Taxes lhsTaxes;
            lhsTaxes = this.getTaxes();
            Taxes rhsTaxes;
            rhsTaxes = that.getTaxes();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "taxes", lhsTaxes), LocatorUtils.property(thatLocator, "taxes", rhsTaxes), lhsTaxes, rhsTaxes)) {
                return false;
            }
        }
        {
            String lhsTotalFareAmount;
            lhsTotalFareAmount = this.getTotalFareAmount();
            String rhsTotalFareAmount;
            rhsTotalFareAmount = that.getTotalFareAmount();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "totalFareAmount", lhsTotalFareAmount), LocatorUtils.property(thatLocator, "totalFareAmount", rhsTotalFareAmount), lhsTotalFareAmount, rhsTotalFareAmount)) {
                return false;
            }
        }
        {
            String lhsTotalFareCurrencyAmount;
            lhsTotalFareCurrencyAmount = this.getTotalFareCurrencyAmount();
            String rhsTotalFareCurrencyAmount;
            rhsTotalFareCurrencyAmount = that.getTotalFareCurrencyAmount();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "totalFareCurrencyAmount", lhsTotalFareCurrencyAmount), LocatorUtils.property(thatLocator, "totalFareCurrencyAmount", rhsTotalFareCurrencyAmount), lhsTotalFareCurrencyAmount, rhsTotalFareCurrencyAmount)) {
                return false;
            }
        }
        {
            List<Surcharges> lhsSurcharges;
            lhsSurcharges = (((this.surcharges!= null)&&(!this.surcharges.isEmpty()))?this.getSurcharges():null);
            List<Surcharges> rhsSurcharges;
            rhsSurcharges = (((that.surcharges!= null)&&(!that.surcharges.isEmpty()))?that.getSurcharges():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "surcharges", lhsSurcharges), LocatorUtils.property(thatLocator, "surcharges", rhsSurcharges), lhsSurcharges, rhsSurcharges)) {
                return false;
            }
        }
        {
            Messages lhsMessages;
            lhsMessages = this.getMessages();
            Messages rhsMessages;
            rhsMessages = that.getMessages();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "messages", lhsMessages), LocatorUtils.property(thatLocator, "messages", rhsMessages), lhsMessages, rhsMessages)) {
                return false;
            }
        }
        {
            BaggageInformationList lhsBaggageInformationList;
            lhsBaggageInformationList = this.getBaggageInformationList();
            BaggageInformationList rhsBaggageInformationList;
            rhsBaggageInformationList = that.getBaggageInformationList();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "baggageInformationList", lhsBaggageInformationList), LocatorUtils.property(thatLocator, "baggageInformationList", rhsBaggageInformationList), lhsBaggageInformationList, rhsBaggageInformationList)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

}
