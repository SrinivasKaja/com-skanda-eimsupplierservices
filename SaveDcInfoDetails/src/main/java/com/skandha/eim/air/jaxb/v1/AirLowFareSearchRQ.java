//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.11.30 at 10:02:03 PM IST 
//


package com.skandha.eim.air.jaxb.v1;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="requesterDetails" type="{http://www.xmlns.skandha.com/datatypes/Air/Service/1.0/}RequesterDetails" minOccurs="0"/>
 *         &lt;element name="originDestinationInformation" type="{http://www.xmlns.skandha.com/datatypes/Air/Service/1.0/}OriginDestinationInformation" maxOccurs="10" minOccurs="0"/>
 *         &lt;element name="travelPreferences" type="{http://www.xmlns.skandha.com/datatypes/Air/Service/1.0/}TravelPreferences" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="travelerInfoSummary" type="{http://www.xmlns.skandha.com/datatypes/Air/Service/1.0/}TravelerInfoSummary" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="tpaextensions" type="{http://www.xmlns.skandha.com/datatypes/Air/Service/1.0/}TPA_Extensions" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "requesterDetails",
    "originDestinationInformation",
    "travelPreferences",
    "travelerInfoSummary",
    "tpaextensions"
})
@XmlRootElement(name = "AirLowFareSearchRQ")
public class AirLowFareSearchRQ
    implements Equals, ToString
{

    protected RequesterDetails requesterDetails;
    protected List<OriginDestinationInformation> originDestinationInformation;
    protected List<TravelPreferences> travelPreferences;
    protected List<TravelerInfoSummary> travelerInfoSummary;
    protected TPAExtensions tpaextensions;

    /**
     * Gets the value of the requesterDetails property.
     * 
     * @return
     *     possible object is
     *     {@link RequesterDetails }
     *     
     */
    public RequesterDetails getRequesterDetails() {
        return requesterDetails;
    }

    /**
     * Sets the value of the requesterDetails property.
     * 
     * @param value
     *     allowed object is
     *     {@link RequesterDetails }
     *     
     */
    public void setRequesterDetails(RequesterDetails value) {
        this.requesterDetails = value;
    }

    /**
     * Gets the value of the originDestinationInformation property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the originDestinationInformation property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getOriginDestinationInformation().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link OriginDestinationInformation }
     * 
     * 
     */
    public List<OriginDestinationInformation> getOriginDestinationInformation() {
        if (originDestinationInformation == null) {
            originDestinationInformation = new ArrayList<OriginDestinationInformation>();
        }
        return this.originDestinationInformation;
    }

    /**
     * Gets the value of the travelPreferences property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the travelPreferences property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getTravelPreferences().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TravelPreferences }
     * 
     * 
     */
    public List<TravelPreferences> getTravelPreferences() {
        if (travelPreferences == null) {
            travelPreferences = new ArrayList<TravelPreferences>();
        }
        return this.travelPreferences;
    }

    /**
     * Gets the value of the travelerInfoSummary property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the travelerInfoSummary property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getTravelerInfoSummary().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TravelerInfoSummary }
     * 
     * 
     */
    public List<TravelerInfoSummary> getTravelerInfoSummary() {
        if (travelerInfoSummary == null) {
            travelerInfoSummary = new ArrayList<TravelerInfoSummary>();
        }
        return this.travelerInfoSummary;
    }

    /**
     * Gets the value of the tpaextensions property.
     * 
     * @return
     *     possible object is
     *     {@link TPAExtensions }
     *     
     */
    public TPAExtensions getTpaextensions() {
        return tpaextensions;
    }

    /**
     * Sets the value of the tpaextensions property.
     * 
     * @param value
     *     allowed object is
     *     {@link TPAExtensions }
     *     
     */
    public void setTpaextensions(TPAExtensions value) {
        this.tpaextensions = value;
    }

    public void setOriginDestinationInformation(List<OriginDestinationInformation> value) {
        this.originDestinationInformation = null;
        List<OriginDestinationInformation> draftl = this.getOriginDestinationInformation();
        draftl.addAll(value);
    }

    public void setTravelPreferences(List<TravelPreferences> value) {
        this.travelPreferences = null;
        List<TravelPreferences> draftl = this.getTravelPreferences();
        draftl.addAll(value);
    }

    public void setTravelerInfoSummary(List<TravelerInfoSummary> value) {
        this.travelerInfoSummary = null;
        List<TravelerInfoSummary> draftl = this.getTravelerInfoSummary();
        draftl.addAll(value);
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            RequesterDetails theRequesterDetails;
            theRequesterDetails = this.getRequesterDetails();
            strategy.appendField(locator, this, "requesterDetails", buffer, theRequesterDetails);
        }
        {
            List<OriginDestinationInformation> theOriginDestinationInformation;
            theOriginDestinationInformation = (((this.originDestinationInformation!= null)&&(!this.originDestinationInformation.isEmpty()))?this.getOriginDestinationInformation():null);
            strategy.appendField(locator, this, "originDestinationInformation", buffer, theOriginDestinationInformation);
        }
        {
            List<TravelPreferences> theTravelPreferences;
            theTravelPreferences = (((this.travelPreferences!= null)&&(!this.travelPreferences.isEmpty()))?this.getTravelPreferences():null);
            strategy.appendField(locator, this, "travelPreferences", buffer, theTravelPreferences);
        }
        {
            List<TravelerInfoSummary> theTravelerInfoSummary;
            theTravelerInfoSummary = (((this.travelerInfoSummary!= null)&&(!this.travelerInfoSummary.isEmpty()))?this.getTravelerInfoSummary():null);
            strategy.appendField(locator, this, "travelerInfoSummary", buffer, theTravelerInfoSummary);
        }
        {
            TPAExtensions theTpaextensions;
            theTpaextensions = this.getTpaextensions();
            strategy.appendField(locator, this, "tpaextensions", buffer, theTpaextensions);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof AirLowFareSearchRQ)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final AirLowFareSearchRQ that = ((AirLowFareSearchRQ) object);
        {
            RequesterDetails lhsRequesterDetails;
            lhsRequesterDetails = this.getRequesterDetails();
            RequesterDetails rhsRequesterDetails;
            rhsRequesterDetails = that.getRequesterDetails();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "requesterDetails", lhsRequesterDetails), LocatorUtils.property(thatLocator, "requesterDetails", rhsRequesterDetails), lhsRequesterDetails, rhsRequesterDetails)) {
                return false;
            }
        }
        {
            List<OriginDestinationInformation> lhsOriginDestinationInformation;
            lhsOriginDestinationInformation = (((this.originDestinationInformation!= null)&&(!this.originDestinationInformation.isEmpty()))?this.getOriginDestinationInformation():null);
            List<OriginDestinationInformation> rhsOriginDestinationInformation;
            rhsOriginDestinationInformation = (((that.originDestinationInformation!= null)&&(!that.originDestinationInformation.isEmpty()))?that.getOriginDestinationInformation():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "originDestinationInformation", lhsOriginDestinationInformation), LocatorUtils.property(thatLocator, "originDestinationInformation", rhsOriginDestinationInformation), lhsOriginDestinationInformation, rhsOriginDestinationInformation)) {
                return false;
            }
        }
        {
            List<TravelPreferences> lhsTravelPreferences;
            lhsTravelPreferences = (((this.travelPreferences!= null)&&(!this.travelPreferences.isEmpty()))?this.getTravelPreferences():null);
            List<TravelPreferences> rhsTravelPreferences;
            rhsTravelPreferences = (((that.travelPreferences!= null)&&(!that.travelPreferences.isEmpty()))?that.getTravelPreferences():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "travelPreferences", lhsTravelPreferences), LocatorUtils.property(thatLocator, "travelPreferences", rhsTravelPreferences), lhsTravelPreferences, rhsTravelPreferences)) {
                return false;
            }
        }
        {
            List<TravelerInfoSummary> lhsTravelerInfoSummary;
            lhsTravelerInfoSummary = (((this.travelerInfoSummary!= null)&&(!this.travelerInfoSummary.isEmpty()))?this.getTravelerInfoSummary():null);
            List<TravelerInfoSummary> rhsTravelerInfoSummary;
            rhsTravelerInfoSummary = (((that.travelerInfoSummary!= null)&&(!that.travelerInfoSummary.isEmpty()))?that.getTravelerInfoSummary():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "travelerInfoSummary", lhsTravelerInfoSummary), LocatorUtils.property(thatLocator, "travelerInfoSummary", rhsTravelerInfoSummary), lhsTravelerInfoSummary, rhsTravelerInfoSummary)) {
                return false;
            }
        }
        {
            TPAExtensions lhsTpaextensions;
            lhsTpaextensions = this.getTpaextensions();
            TPAExtensions rhsTpaextensions;
            rhsTpaextensions = that.getTpaextensions();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "tpaextensions", lhsTpaextensions), LocatorUtils.property(thatLocator, "tpaextensions", rhsTpaextensions), lhsTpaextensions, rhsTpaextensions)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

}
